name: Continuous Integration (CI)

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  Pylint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.12"]
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        cache: "pip"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install wheel
        pip install pylint
    - name: Analysing the code with pylint
      run: |
        pylint $(find ./src/ -name "*.py" | xargs)
  Unittest:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.12"]
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        cache: "pip"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install wheel
        pip install coverage[toml]
    - name: Analysing the code with unittest
      run: |
        coverage run ./tools/run_all_tests.py
    - name: Analysing the code with coverage
      run: |
        coverage html
        coverage report
    - name: Upload Report Artifact
      uses: actions/upload-artifact@v4
      with:
        name: PuzzlePeace-Coverage
        path: htmlcov/
  mypy:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.12"]
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        cache: "pip"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install wheel
        pip install mypy
    - name: Analysing the code with mypy
      run: |
        mypy ./src --strict
